(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){const e=document.querySelector(".text-area");return{start:e.selectionStart,end:e.selectionEnd}}function n(e){const t=document.querySelector(".text-area");t.selectionStart=e.start,t.selectionEnd=e.start}e.d({},{T:()=>p});const s=["`","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","q","w","e","r","t","y","u","i","o","p","[","]","\\","Caps Lock","a","s","d","f","g","h","j","k","l",";","'","Enter","Shift","z","x","c","v","b","n","m",",",".","/","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],r=["`","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","Q","W","E","R","T","Y","U","I","O","P","[","]","\\","Caps Lock","A","S","D","F","G","H","J","K","L",";","'","Enter","Shift","Z","X","C","V","B","N","M",",",".","/","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],a=["~","!","@","#","$","%","^","&","*","(",")","_","+","Backspace","Tab","Q","W","E","R","T","Y","U","I","O","P","{","}","|","Caps Lock","A","S","D","F","G","H","J","K","L",":",'"',"Enter","Shift","Z","X","C","V","B","N","M","<",">","?","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],o=["ё","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","й","ц","у","к","е","н","г","ш","щ","з","х","ъ","\\","Caps Lock","ф","ы","в","а","п","р","о","л","д","ж","э","Enter","Shift","я","ч","с","м","и","т","ь","б","ю",".","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],i=["Ё","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","Й","Ц","У","К","Е","Н","Г","Ш","Щ","З","Х","Ъ","\\","Caps Lock","Ф","Ы","В","А","П","Р","О","Л","Д","Ж","Э","Enter","Shift","Я","Ч","С","М","И","Т","Ь","Б","Ю",".","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],c=["Ё","!",'"',"№",";","%",":","?","*","(",")","_","+","Backspace","Tab","Й","Ц","У","К","Е","Н","Г","Ш","Щ","З","Х","Ъ","/","Caps Lock","Ф","Ы","В","А","П","Р","О","Л","Д","Ж","Э","Enter","Shift","Я","Ч","С","М","И","Т","Ь","Б","Ю",",","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"];let d=!1,l=!0,u=!1,h=!1;"false"===localStorage.getItem("currentLanguageEn")&&(l=!1),window.addEventListener("beforeunload",(()=>{localStorage.setItem("currentLanguageEn",l)}));class f{constructor(e,t){this.keycode=e,this.button=document.createElement("button"),this.button.classList.add("key"),"ControlLeft"===e||"ControlRight"===e||"AltLeft"===e||"AltRight"===e||"MetaLeft"===e?this.button.classList.add("key-size-2"):"Tab"===e||"Backslash"===e?this.button.classList.add("key-size-3"):"Backspace"===e||"CapsLock"===e||"Enter"===e?this.button.classList.add("key-size-4"):"ShiftLeft"===e||"ShiftRight"===e?this.button.classList.add("key-size-5"):"Space"===e?this.button.classList.add("key-size-6"):this.button.classList.add("key-size-1"),this.renameKey(t),"ShiftLeft"!==e&&"ShiftRight"!==e?this.button.addEventListener("click",(()=>{this.pressKey()})):(this.button.addEventListener("mousedown",(()=>{this.pressKey()})),this.button.addEventListener("mouseup",(()=>{this.unpressKey()}))),document.querySelector(".keyboard-div").append(this.button)}pressKey(){"MetaLeft"!==this.keycode&&"AltLeft"!==this.keycode&&"AltRight"!==this.keycode&&"ControlLeft"!==this.keycode&&"ControlRight"!==this.keycode&&("Backspace"===this.keycode?function(){const e=document.querySelector(".text-area"),s=t();s.start===s.end?(e.value=e.value.substring(0,s.start-1)+e.value.substring(s.end),0!==s.start&&s.start--):e.value=e.value.substring(0,s.start)+e.value.substring(s.end),e.focus(),n(s)}():"Delete"===this.keycode?function(){const e=document.querySelector(".text-area"),s=t();s.start===s.end?e.value=e.value.substring(0,s.start)+e.value.substring(s.end+1):e.value=e.value.substring(0,s.start)+e.value.substring(s.end),e.focus(),n(s)}():"Enter"===this.keycode?function(){const e=document.querySelector(".text-area"),s=t();e.value=e.value.substring(0,s.start)+"\n"+e.value.substring(s.end),s.start++,e.focus(),n(s)}():"ArrowUp"===this.keycode||"ArrowDown"===this.keycode||"ArrowLeft"===this.keycode||"ArrowRight"===this.keycode?function(e){const s=document.querySelector(".text-area"),r=t();if("ArrowLeft"===e)0!==r.end&&r.end--,r.start=r.end;else if("ArrowRight"===e)r.end++,r.start=r.end;else if("ArrowUp"===e){const e=s.value;let t,n=0,a=0;for(let t=r.end-1;t>=0;t--)if("\n"===e[t]){n=t+1;break}t=r.end-n;for(let t=n-2;t>=0;t--)if("\n"===e[t]){a=t+1;break}r.end=a+t>=n?0===a&&0===n?0:n-1:a+t,r.start=r.end}else if("ArrowDown"===e){const e=s.value;let t,n=0,a=e.length,o=e.length;for(let t=r.end-1;t>=0;t--)if("\n"===e[t]){n=t+1;break}t=r.end-n;for(let t=r.end;t<e.length;t++)if("\n"===e[t]){a=t;break}for(let t=a+2;t<e.length;t++)if("\n"===e[t]){o=t;break}r.end=a+1+t>o?o:a+1+t,r.start=r.end}s.focus(),n(r)}(this.keycode):"Tab"===this.keycode?function(){const e=document.querySelector(".text-area"),s=t();e.value=e.value.substring(0,s.start)+"    "+e.value.substring(s.end),s.start+=4,e.focus(),n(s)}():"Space"===this.keycode?function(){const e=document.querySelector(".text-area"),s=t();e.value=e.value.substring(0,s.start)+" "+e.value.substring(s.end),s.start+=1,e.focus(),n(s)}():"ShiftLeft"===this.keycode||"ShiftRight"===this.keycode?y(p,l?a:c):"CapsLock"===this.keycode?(d=!d,l?d?(y(p,r),this.button.classList.add("caps_active")):(y(p,s),this.button.classList.remove("caps_active")):d?(y(p,i),this.button.classList.add("caps_active")):(y(p,o),this.button.classList.remove("caps_active"))):function(e){const s=document.querySelector(".text-area"),r=t();s.value=s.value.substring(0,r.start)+e.keyLetter+s.value.substring(r.end),r.start++,s.focus(),n(r)}(this))}unpressKey(){"ShiftLeft"!==this.keycode&&"ShiftRight"!==this.keycode||y(p,l?d?r:s:d?i:o)}renameKey(e){this.keyLetter=e,"ArrowUp"===this.keycode?this.button.innerHTML="&#129045;":"ArrowLeft"===this.keycode?this.button.innerHTML="&#129044;":"ArrowDown"===this.keycode?this.button.innerHTML="&#129047;":"ArrowRight"===this.keycode?this.button.innerHTML="&#129046;":"ShiftLeft"===this.keycode||"ShiftRight"===this.keycode?this.button.innerHTML=e+" &#8682;":"Enter"===this.keycode?this.button.innerHTML=this.keycode+" &#8626;":"Backspace"===this.keycode?this.button.innerHTML=this.keycode+" &#129044;":this.button.innerHTML=e}changeLanguage(){y(p,l?s:o)}}function y(e,t){e.forEach(((e,n)=>{e.renameKey(t[n])}))}(new class{constructor(){}create(){const e=document.createElement("header"),t=document.createElement("h1"),n=document.createElement("div"),s=document.createElement("p"),r=document.createElement("p"),a=document.createElement("p"),o=document.createElement("button"),i=document.createElement("div"),c=document.createElement("textarea"),d=document.createElement("div"),l=document.createElement("footer"),u=document.createElement("div"),h=document.createElement("p"),f=document.createElement("p"),y=document.createElement("a");e.classList.add("header-div"),s.classList.add("header__p"),r.classList.add("header__p"),a.classList.add("header__p"),o.classList.add("header__lang-change-button"),o.classList.add("key"),o.classList.add("key-size-2"),i.classList.add("text-area-div"),c.classList.add("text-area"),d.classList.add("keyboard-div"),l.classList.add("footer-div"),y.setAttribute("href","https://rs.school/"),y.setAttribute("target","_blank"),t.innerText="Virtual Keyboard (VK)",s.innerText="This virtual keyboard is designed for windows",r.innerText="To switch language press Left Alt + Left Ctrl",a.innerText="or press this button: ",o.innerText="En",h.innerHTML='<span>Developer: </span><a class="footer__a" href="https://github.com/Legat14" target="_blank">Ivan Zotov</a>',f.innerText="May of 2022",y.innerHTML='<img src="./assets/img/rs_school_js_w.svg" alt="RS School" width="180" height="67">',document.body.append(e),e.append(t),e.append(n),n.append(s),n.append(r),n.append(a),a.append(o),document.body.append(i),i.append(c),document.body.append(d),document.body.append(l),l.append(u),u.append(h),u.append(f),l.append(y)}}).create();const p=[];["Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ArrowUp","ShiftRight","ControlLeft","MetaLeft","AltLeft","Space","AltRight","ControlRight","ArrowLeft","ArrowDown","ArrowRight","Delete"].forEach(((e,t)=>{p[t]=new f(e,l?s[t]:o[t])})),document.querySelector(".text-area").focus(),document.addEventListener("keydown",(()=>{if(event.isTrusted){let e="";p.forEach((t=>{t.keycode===event.code&&(event.preventDefault(),e=t)})),e&&("CapsLock"===e.keycode?d?e.button.classList.remove("caps_active"):e.button.classList.add("caps_active"):(e.button.classList.add("key_active"),"AltLeft"===e.keycode&&(u=!0),"ControlLeft"===e.keycode&&(h=!0),u&&h&&(l=!l,e.changeLanguage())),e.pressKey())}})),document.addEventListener("keyup",(()=>{if(event.isTrusted&&"CapsLock"!==event.code){let e="";p.forEach((t=>{t.keycode===event.code&&(e=t)})),e&&e.button.classList.remove("key_active"),"ShiftLeft"!==e.keycode&&"ShiftRight"!==e.keycode||e.unpressKey(),"AltLeft"===e.keycode&&(u=!1),"ControlLeft"===e.keycode&&(h=!1)}})),document.addEventListener("click",(()=>{document.querySelector(".text-area").focus()})),function(){const e=document.querySelector(".header__lang-change-button");e.innerText=l?"En":"Ru",e.addEventListener("click",(()=>{l=!l,e.innerText=l?"En":"Ru",p[0].changeLanguage()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,