(()=>{"use strict";var e={d:(t,s)=>{for(var o in s)e.o(s,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:s[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){const e=document.querySelector(".text-area");return{start:e.selectionStart,end:e.selectionEnd}}function s(e){const t=document.querySelector(".text-area");t.selectionStart=e.start,t.selectionEnd=e.start}e.d({},{T:()=>d});const o=["`","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","q","w","e","r","t","y","u","i","o","p","[","]","\\","Caps Lock","a","s","d","f","g","h","j","k","l",";","'","Enter","Shift","z","x","c","v","b","n","m",",",".","/","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],n=["`","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","Q","W","E","R","T","Y","U","I","O","P","[","]","\\","Caps Lock","A","S","D","F","G","H","J","K","L",";","'","Enter","Shift","Z","X","C","V","B","N","M",",",".","/","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"],r=["~","!","@","#","$","%","^","&","*","(",")","_","+","Backspace","Tab","Q","W","E","R","T","Y","U","I","O","P","{","}","|","Caps Lock","A","S","D","F","G","H","J","K","L",":",'"',"Enter","Shift","Z","X","C","V","B","N","M","<",">","?","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"];let i=!1;class a{constructor(e,t,s){this.keycode=e,this.number=s,this.button=document.createElement("button"),this.button.classList.add("key"),"ControlLeft"===e||"ControlRight"===e||"AltLeft"===e||"AltRight"===e||"MetaLeft"===e?this.button.classList.add("key-size-2"):"Tab"===e||"Backslash"===e?this.button.classList.add("key-size-3"):"Backspace"===e||"CapsLock"===e||"Enter"===e?this.button.classList.add("key-size-4"):"ShiftLeft"===e||"ShiftRight"===e?this.button.classList.add("key-size-5"):"Space"===e?this.button.classList.add("key-size-6"):this.button.classList.add("key-size-1"),this.renameKey(t),this.button.addEventListener("click",(()=>{this.pressKey()})),document.querySelector(".keyboard-div").append(this.button)}pressKey(){console.log(event),"MetaLeft"!==this.keycode&&"AltLeft"!==this.keycode&&"AltRight"!==this.keycode&&"ControlLeft"!==this.keycode&&"ControlRight"!==this.keycode&&("Backspace"===this.keycode?function(){const e=document.querySelector(".text-area"),o=t();o.start===o.end?(e.value=e.value.substring(0,o.start-1)+e.value.substring(o.end),0!==o.start&&o.start--):e.value=e.value.substring(0,o.start)+e.value.substring(o.end),e.focus(),s(o)}():"Delete"===this.keycode?function(){const e=document.querySelector(".text-area"),o=t();o.start===o.end?e.value=e.value.substring(0,o.start)+e.value.substring(o.end+1):e.value=e.value.substring(0,o.start)+e.value.substring(o.end),e.focus(),s(o)}():"Enter"===this.keycode?function(){const e=document.querySelector(".text-area"),o=t();e.value=e.value.substring(0,o.start)+"\n"+e.value.substring(o.end),o.start++,e.focus(),s(o)}():"ArrowUp"===this.keycode||"ArrowDown"===this.keycode||"ArrowLeft"===this.keycode||"ArrowRight"===this.keycode?function(e){const o=document.querySelector(".text-area"),n=t();if("ArrowLeft"===e)0!==n.end&&n.end--,n.start=n.end;else if("ArrowRight"===e)n.end++,n.start=n.end;else if("ArrowUp"===e){const e=o.value;let t,s=0,r=0;for(let t=n.end-1;t>=0;t--)if("\n"===e[t]){s=t+1;break}t=n.end-s;for(let t=s-2;t>=0;t--)if("\n"===e[t]){r=t+1;break}n.end=r+t>=s?0===r&&0===s?0:s-1:r+t,n.start=n.end}else if("ArrowDown"===e){const e=o.value;let t,s=0,r=e.length,i=e.length;for(let t=n.end-1;t>=0;t--)if("\n"===e[t]){s=t+1;break}t=n.end-s;for(let t=n.end;t<e.length;t++)if("\n"===e[t]){r=t;break}for(let t=r+2;t<e.length;t++)if("\n"===e[t]){i=t;break}n.end=r+1+t>i?i:r+1+t,n.start=n.end}o.focus(),s(n)}(this.keycode):"Tab"===this.keycode?function(){const e=document.querySelector(".text-area"),o=t();e.value=e.value.substring(0,o.start)+"    "+e.value.substring(o.end),o.start+=4,e.focus(),s(o)}():"Space"===this.keycode?function(){const e=document.querySelector(".text-area"),o=t();e.value=e.value.substring(0,o.start)+" "+e.value.substring(o.end),o.start+=1,e.focus(),s(o)}():"ShiftLeft"===this.keycode||"ShiftRight"===this.keycode?c(d,r):"CapsLock"===this.keycode?(i=!i,i?(c(d,n),this.button.classList.add("caps_active")):(c(d,o),this.button.classList.remove("caps_active"))):function(e){const o=document.querySelector(".text-area"),n=t();o.value=o.value.substring(0,n.start)+e.keyLetter+o.value.substring(n.end),n.start++,o.focus(),s(n)}(this))}unpressKey(){console.log(event),"ShiftLeft"!==this.keycode&&"ShiftRight"!==this.keycode||c(d,i?n:o)}renameKey(e){this.keyLetter=e,"ArrowUp"===this.keycode?this.button.innerHTML="&#129045;":"ArrowLeft"===this.keycode?this.button.innerHTML="&#129044;":"ArrowDown"===this.keycode?this.button.innerHTML="&#129047;":"ArrowRight"===this.keycode?this.button.innerHTML="&#129046;":"ShiftLeft"===this.keycode||"ShiftRight"===this.keycode?this.button.innerHTML=e+" &#8682;":"Enter"===this.keycode?this.button.innerHTML=this.keycode+" &#8626;":"Backspace"===this.keycode?this.button.innerHTML=this.keycode+" &#129044;":this.button.innerHTML=e}}function c(e,t){e.forEach(((e,s)=>{e.renameKey(t[s])}))}(new class{constructor(){}create(){const e=document.createElement("div"),t=document.createElement("p"),s=document.createElement("div"),o=document.createElement("textarea"),n=document.createElement("div"),r=document.createElement("div");e.classList.add("header-div"),t.classList.add("header__description"),s.classList.add("text-area-div"),o.classList.add("text-area"),n.classList.add("keyboard-div"),r.classList.add("footer-div"),t.innerText="This virtual keyboard is designed for windows",document.body.append(e),e.append(t),document.body.append(s),s.append(o),document.body.append(n),document.body.append(r)}}).create();const d=[];["Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ArrowUp","ShiftRight","ControlLeft","MetaLeft","AltLeft","Space","AltRight","ControlRight","ArrowLeft","ArrowDown","ArrowRight","Delete"].forEach(((e,t)=>{d[t]=new a(e,o[t],t)})),document.querySelector(".text-area").focus(),document.addEventListener("keydown",(()=>{if(console.log(event),event.isTrusted){let e="";d.forEach((t=>{t.keycode===event.code&&(event.preventDefault(),e=t)})),e&&("CapsLock"===e.keycode?i?e.button.classList.remove("caps_active"):e.button.classList.add("caps_active"):e.button.classList.add("key_active"),e.pressKey())}})),document.addEventListener("keyup",(()=>{if(console.log(event),event.isTrusted&&"CapsLock"!==event.code){let e="";d.forEach((t=>{t.keycode===event.code&&(e=t)})),e&&e.button.classList.remove("key_active"),"ShiftLeft"!==e.keycode&&"ShiftRight"!==e.keycode||e.unpressKey()}})),document.addEventListener("click",(()=>{document.querySelector(".text-area").focus()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,