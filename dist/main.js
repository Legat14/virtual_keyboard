(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(){const e=document.querySelector(".text-area"),t=e.selectionStart,n=e.selectionEnd;return console.log(t,n),{start:t,end:n}}function n(e){const t=document.querySelector(".text-area");t.selectionStart=e.start,t.selectionEnd=e.start}e.d({},{T:()=>s});const r=["`","1","2","3","4","5","6","7","8","9","0","-","=","Backspace","Tab","q","w","e","r","t","y","u","i","o","p","[","]","\\","Caps Lock","a","s","d","f","g","h","j","k","l",";","'","Enter","Shift","z","x","c","v","b","n","m",",",".","/","ArrowUp","Shift","Ctrl","Win","Alt","Space","Alt","Ctrl","ArrowLeft","ArrowLeftDown","ArrowRight","Del"];class o{constructor(e,t,n){this.keycode=e,this.keyLetter=t,this.number=n,this.button=document.createElement("button"),this.button.classList.add("key"),"ControlLeft"===e||"ControlRight"===e||"AltLeft"===e||"AltRight"===e||"MetaLeft"===e?this.button.classList.add("key-size-2"):"Tab"===e||"Backslash"===e?this.button.classList.add("key-size-3"):"Backspace"===e||"CapsLock"===e||"Enter"===e?this.button.classList.add("key-size-4"):"ShiftLeft"===e||"ShiftRight"===e?this.button.classList.add("key-size-5"):"Space"===e?this.button.classList.add("key-size-6"):this.button.classList.add("key-size-1"),this.button.innerHTML="ArrowUp"===e?"&#129045;":"ArrowLeft"===e?"&#129044;":"ArrowDown"===e?"&#129047;":"ArrowRight"===e?"&#129046;":"ShiftLeft"===e||"ShiftRight"===e?t+" &#8682;":"Enter"===e?e+" &#8626;":"Backspace"===e?e+" &#129044;":t,this.button.addEventListener("click",(()=>{this.pressKey()})),document.querySelector(".keyboard-div").append(this.button)}addKeyboardActive(){this.button.addEventListener("keydown",(()=>{this.button.classList.add("key_active")}))}removeKeyboardActive(){this.button.addEventListener("keyup",(()=>{this.button.classList.remove("key_active")}))}pressKey(){"MetaLeft"!==this.keycode&&("Backspace"===this.keycode?function(){const e=document.querySelector(".text-area"),r=t();r.start===r.end?(e.value=e.value.substring(0,r.start-1)+e.value.substring(r.end),0!==r.start&&r.start--):e.value=e.value.substring(0,r.start)+e.value.substring(r.end),e.focus(),n(r)}():"Enter"===this.keycode?function(){const e=document.querySelector(".text-area"),r=t();e.value=e.value.substring(0,r.start)+"\n"+e.value.substring(r.end),r.start++,e.focus(),n(r)}():"ArrowUp"===this.keycode||"ArrowDown"===this.keycode||"ArrowLeft"===this.keycode||"ArrowRight"===this.keycode?function(e){const r=document.querySelector(".text-area"),o=t();if("ArrowLeft"===e)0!==o.end&&o.end--,o.start=o.end;else if("ArrowRight"===e)o.end++,o.start=o.end;else if("ArrowUp"===e){const e=r.value;let t,n=0,s=0;for(let t=o.end-1;t>=0;t--)if("\n"===e[t]){n=t+1;break}t=o.end-n;for(let t=n-2;t>=0;t--)if("\n"===e[t]){s=t+1;break}o.end=s+t>=n?0===s&&0===n?0:n-1:s+t,o.start=o.end,console.log("text = ",e,"text.length = ",e.length,"currentStringPosition = ",t,"currentStringStartPosition = ",n,"previousStringStartPosition = ",s)}else if("ArrowDown"===e){const e=r.value;let t,n=0,s=e.length,i=e.length;for(let t=o.end-1;t>=0;t--)if("\n"===e[t]){n=t+1;break}t=o.end-n;for(let t=o.end;t<e.length;t++)if("\n"===e[t]){s=t;break}for(let t=s+2;t<e.length;t++)if("\n"===e[t]){i=t;break}console.log("text = ",e,"text.length = ",e.length,"cursorPositions.end = ",o.end,"currentStringPosition = ",t,"currentStringStartPosition = ",n,"currentStringEndPosition = ",s,"nextStringEndPosition = ",i),o.end=s+1+t>i?i:s+1+t,o.start=o.end}r.focus(),n(o)}(this.keycode):function(e){const r=document.querySelector(".text-area"),o=t();r.value=r.value.substring(0,o.start)+e.keyLetter+r.value.substring(o.end),o.start++,r.focus(),n(o)}(this))}}(new class{constructor(){}create(){const e=document.createElement("div"),t=document.createElement("div"),n=document.createElement("textarea"),r=document.createElement("div"),o=document.createElement("div");e.classList.add("header-div"),t.classList.add("text-area-div"),n.classList.add("text-area"),r.classList.add("keyboard-div"),o.classList.add("footer-div"),document.body.append(e),document.body.append(t),t.append(n),document.body.append(r),document.body.append(o)}}).create();const s=[];["Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ArrowUp","ShiftRight","ControlLeft","MetaLeft","AltLeft","Space","AltRight","ControlRight","ArrowLeft","ArrowDown","ArrowRight","Delete"].forEach(((e,t)=>{s[t]=new o(e,r[t],t),s[t].addKeyboardActive(),s[t].removeKeyboardActive()})),document.querySelector(".text-area").focus(),document.addEventListener("keydown",(()=>{if(event.isTrusted){let e="";s.forEach((t=>{event.preventDefault(),t.keycode===event.code&&(e=t)})),e&&(e.button.classList.add("key_active"),e.pressKey())}})),document.addEventListener("keyup",(()=>{if(event.isTrusted){let e="";s.forEach((t=>{t.keycode===event.code&&(e=t)})),e&&e.button.classList.remove("key_active")}})),document.addEventListener("click",(()=>{document.querySelector(".text-area").focus()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,